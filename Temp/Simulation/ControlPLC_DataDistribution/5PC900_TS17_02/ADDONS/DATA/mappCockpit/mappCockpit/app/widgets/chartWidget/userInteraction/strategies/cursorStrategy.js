define(["require", "exports", "../userInteractionController", "../../ChartBase"], function (require, exports, userInteractionController_1, ChartBase_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var CursorInteractionStrategy = /** @class */ (function () {
        function CursorInteractionStrategy(userInteractionController, index) {
            this.index = 0;
            this.dragIsActive = false;
            this.userInteractionController = userInteractionController;
            this.index = index;
        }
        CursorInteractionStrategy.prototype.onMouseHover = function (chart, args, mousePoint) {
            this.userInteractionController.executeCommand(new userInteractionController_1.EventExecuteChartCommandArgs(this, userInteractionController_1.ChartCommandType.checkCursorHovering, chart, { mousePoint: mousePoint }));
        };
        CursorInteractionStrategy.prototype.onClick = function (chart, chartObjectUnderMouse, mousePoint) {
            if (chartObjectUnderMouse.chartObjectType == ChartBase_1.ChartObjectType.cursor) {
                this.userInteractionController.executeCommand(new userInteractionController_1.EventExecuteChartCommandArgs(this, userInteractionController_1.ChartCommandType.setCursorOnPointerPosition, chart, { cursorIndex: chartObjectUnderMouse.args.cursorIndex, mousePoint: mousePoint }));
            }
            else if (chartObjectUnderMouse.chartObjectType == ChartBase_1.ChartObjectType.chartSpace) {
                this.userInteractionController.executeCommand(new userInteractionController_1.EventExecuteChartCommandArgs(this, userInteractionController_1.ChartCommandType.setCursorOnPointerPosition, chart, { cursorIndex: this.index, mousePoint: mousePoint }));
            }
            chartObjectUnderMouse.chartObjectType = ChartBase_1.ChartObjectType.cursor;
            return chartObjectUnderMouse;
        };
        CursorInteractionStrategy.prototype.onDrag = function (chart) {
        };
        CursorInteractionStrategy.prototype.onDragEnd = function (chart) {
        };
        CursorInteractionStrategy.prototype.onMouseDown = function (chart, chartObjectUnderMouse, mousePoint) {
            if (chartObjectUnderMouse.chartObjectType == ChartBase_1.ChartObjectType.cursor) {
                this.userInteractionController.executeCommand(new userInteractionController_1.EventExecuteChartCommandArgs(this, userInteractionController_1.ChartCommandType.setCursorOnPointerPosition, chart, { cursorIndex: chartObjectUnderMouse.args.cursorIndex, mousePoint: mousePoint }));
            }
            else if (chartObjectUnderMouse.chartObjectType == ChartBase_1.ChartObjectType.chartSpace) {
                this.userInteractionController.executeCommand(new userInteractionController_1.EventExecuteChartCommandArgs(this, userInteractionController_1.ChartCommandType.setCursorOnPointerPosition, chart, { cursorIndex: this.index, mousePoint: mousePoint }));
                chartObjectUnderMouse.args.cursorIndex = this.index;
                chartObjectUnderMouse.chartObjectType = ChartBase_1.ChartObjectType.cursor;
            }
            return chartObjectUnderMouse;
        };
        return CursorInteractionStrategy;
    }());
    exports.CursorInteractionStrategy = CursorInteractionStrategy;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3Vyc29yU3RyYXRlZ3kuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvYXBwL3dpZGdldHMvY2hhcnRXaWRnZXQvdXNlckludGVyYWN0aW9uL3N0cmF0ZWdpZXMvY3Vyc29yU3RyYXRlZ3kudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0lBT0E7UUFNSSxtQ0FBWSx5QkFBcUQsRUFBRSxLQUFhO1lBTHhFLFVBQUssR0FBRyxDQUFDLENBQUM7WUFHbEIsaUJBQVksR0FBRyxLQUFLLENBQUM7WUFHakIsSUFBSSxDQUFDLHlCQUF5QixHQUFHLHlCQUF5QixDQUFDO1lBQzNELElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ3ZCLENBQUM7UUFFRCxnREFBWSxHQUFaLFVBQWEsS0FBa0IsRUFBRSxJQUFJLEVBQUUsVUFBVTtZQUM3QyxJQUFJLENBQUMseUJBQXlCLENBQUMsY0FBYyxDQUFDLElBQUksd0RBQTRCLENBQUMsSUFBSSxFQUFFLDRDQUFnQixDQUFDLG1CQUFtQixFQUFFLEtBQUssRUFBRSxFQUFDLFVBQVUsRUFBRyxVQUFVLEVBQUMsQ0FBQyxDQUFDLENBQUE7UUFDakssQ0FBQztRQUVELDJDQUFPLEdBQVAsVUFBUSxLQUFrQixFQUFFLHFCQUE4QyxFQUFFLFVBQWtCO1lBQzFGLElBQUcscUJBQXFCLENBQUMsZUFBZSxJQUFJLDJCQUFlLENBQUMsTUFBTSxFQUFDO2dCQUMvRCxJQUFJLENBQUMseUJBQXlCLENBQUMsY0FBYyxDQUFDLElBQUksd0RBQTRCLENBQUMsSUFBSSxFQUFFLDRDQUFnQixDQUFDLDBCQUEwQixFQUFFLEtBQUssRUFBRSxFQUFDLFdBQVcsRUFBRSxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLFVBQVUsRUFBRSxVQUFVLEVBQUMsQ0FBQyxDQUFDLENBQUE7YUFDM047aUJBQ0ksSUFBRyxxQkFBcUIsQ0FBQyxlQUFlLElBQUksMkJBQWUsQ0FBQyxVQUFVLEVBQUM7Z0JBQ3hFLElBQUksQ0FBQyx5QkFBeUIsQ0FBQyxjQUFjLENBQUMsSUFBSSx3REFBNEIsQ0FBQyxJQUFJLEVBQUUsNENBQWdCLENBQUMsMEJBQTBCLEVBQUUsS0FBSyxFQUFFLEVBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxLQUFLLEVBQUUsVUFBVSxFQUFFLFVBQVUsRUFBQyxDQUFDLENBQUMsQ0FBQTthQUMvTDtZQUNELHFCQUFxQixDQUFDLGVBQWUsR0FBRywyQkFBZSxDQUFDLE1BQU0sQ0FBQztZQUMvRCxPQUFPLHFCQUFxQixDQUFDO1FBQ2pDLENBQUM7UUFFRCwwQ0FBTSxHQUFOLFVBQU8sS0FBa0I7UUFDekIsQ0FBQztRQUVELDZDQUFTLEdBQVQsVUFBVSxLQUFrQjtRQUM1QixDQUFDO1FBRUQsK0NBQVcsR0FBWCxVQUFZLEtBQWtCLEVBQUUscUJBQThDLEVBQUUsVUFBa0I7WUFDOUYsSUFBRyxxQkFBcUIsQ0FBQyxlQUFlLElBQUksMkJBQWUsQ0FBQyxNQUFNLEVBQUM7Z0JBQy9ELElBQUksQ0FBQyx5QkFBeUIsQ0FBQyxjQUFjLENBQUMsSUFBSSx3REFBNEIsQ0FBQyxJQUFJLEVBQUUsNENBQWdCLENBQUMsMEJBQTBCLEVBQUUsS0FBSyxFQUFFLEVBQUMsV0FBVyxFQUFFLHFCQUFxQixDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsVUFBVSxFQUFFLFVBQVUsRUFBQyxDQUFDLENBQUMsQ0FBQTthQUMzTjtpQkFDSSxJQUFHLHFCQUFxQixDQUFDLGVBQWUsSUFBSSwyQkFBZSxDQUFDLFVBQVUsRUFBQztnQkFDeEUsSUFBSSxDQUFDLHlCQUF5QixDQUFDLGNBQWMsQ0FBQyxJQUFJLHdEQUE0QixDQUFDLElBQUksRUFBRSw0Q0FBZ0IsQ0FBQywwQkFBMEIsRUFBRSxLQUFLLEVBQUUsRUFBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxVQUFVLEVBQUUsVUFBVSxFQUFDLENBQUMsQ0FBQyxDQUFBO2dCQUM1TCxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7Z0JBRXBELHFCQUFxQixDQUFDLGVBQWUsR0FBRywyQkFBZSxDQUFDLE1BQU0sQ0FBQzthQUVsRTtZQUVELE9BQU8scUJBQXFCLENBQUM7UUFDakMsQ0FBQztRQUNMLGdDQUFDO0lBQUQsQ0FBQyxBQTlDRCxJQThDQztJQUVPLDhEQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElDaGFydEludGVyYWN0aW9uU3RyYXRlZ3kgfSBmcm9tIFwiLi9jaGFyU3RyYXRlZ3lJbnRlcmZhY2VcIjtcclxuaW1wb3J0IHsgQ2hhcnRDb21tYW5kVHlwZSwgRXZlbnRFeGVjdXRlQ2hhcnRDb21tYW5kQXJncyB9IGZyb20gXCIuLi91c2VySW50ZXJhY3Rpb25Db250cm9sbGVyXCI7XHJcbmltcG9ydCB7IElVc2VySW50ZXJhY3Rpb25Db250cm9sbGVyIH0gZnJvbSBcIi4uL2ludGVyZmFjZXMvY29udHJvbGxlckludGVyZmFjZVwiO1xyXG5pbXBvcnQgeyBJVHJhY2VDaGFydCB9IGZyb20gXCIuLi8uLi9pbnRlcmZhY2VzL3RyYWNlQ2hhcnRJbnRlcmZhY2VcIjtcclxuaW1wb3J0IHsgQ2hhcnRPYmplY3RUeXBlLCBDaGFydE9iamVjdEluZm9ybWF0aW9uIH0gZnJvbSBcIi4uLy4uL0NoYXJ0QmFzZVwiO1xyXG5pbXBvcnQgeyBJUG9pbnQgfSBmcm9tIFwiLi4vLi4vLi4vLi4vbW9kZWxzL2NvbW1vbi9pbnRlcmZhY2VzL3BvaW50SW50ZXJmYWNlXCI7XHJcblxyXG5jbGFzcyAgQ3Vyc29ySW50ZXJhY3Rpb25TdHJhdGVneSBpbXBsZW1lbnRzIElDaGFydEludGVyYWN0aW9uU3RyYXRlZ3l7XHJcbiAgICBwcml2YXRlIGluZGV4ID0gMDtcclxuICAgIHByaXZhdGUgdXNlckludGVyYWN0aW9uQ29udHJvbGxlcjogSVVzZXJJbnRlcmFjdGlvbkNvbnRyb2xsZXI7XHJcblxyXG4gICAgZHJhZ0lzQWN0aXZlID0gZmFsc2U7XHJcbiAgICBcclxuICAgIGNvbnN0cnVjdG9yKHVzZXJJbnRlcmFjdGlvbkNvbnRyb2xsZXI6IElVc2VySW50ZXJhY3Rpb25Db250cm9sbGVyLCBpbmRleDogbnVtYmVyKSB7XHJcbiAgICAgICAgdGhpcy51c2VySW50ZXJhY3Rpb25Db250cm9sbGVyID0gdXNlckludGVyYWN0aW9uQ29udHJvbGxlcjtcclxuICAgICAgICB0aGlzLmluZGV4ID0gaW5kZXg7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIG9uTW91c2VIb3ZlcihjaGFydDogSVRyYWNlQ2hhcnQsIGFyZ3MsIG1vdXNlUG9pbnQpIHtcclxuICAgICAgICB0aGlzLnVzZXJJbnRlcmFjdGlvbkNvbnRyb2xsZXIuZXhlY3V0ZUNvbW1hbmQobmV3IEV2ZW50RXhlY3V0ZUNoYXJ0Q29tbWFuZEFyZ3ModGhpcywgQ2hhcnRDb21tYW5kVHlwZS5jaGVja0N1cnNvckhvdmVyaW5nLCBjaGFydCwge21vdXNlUG9pbnQgOiBtb3VzZVBvaW50fSkpXHJcbiAgICB9XHJcblxyXG4gICAgb25DbGljayhjaGFydDogSVRyYWNlQ2hhcnQsIGNoYXJ0T2JqZWN0VW5kZXJNb3VzZSA6IENoYXJ0T2JqZWN0SW5mb3JtYXRpb24sIG1vdXNlUG9pbnQ6IElQb2ludCkgOiBDaGFydE9iamVjdEluZm9ybWF0aW9ue1xyXG4gICAgICAgIGlmKGNoYXJ0T2JqZWN0VW5kZXJNb3VzZS5jaGFydE9iamVjdFR5cGUgPT0gQ2hhcnRPYmplY3RUeXBlLmN1cnNvcil7XHJcbiAgICAgICAgICAgIHRoaXMudXNlckludGVyYWN0aW9uQ29udHJvbGxlci5leGVjdXRlQ29tbWFuZChuZXcgRXZlbnRFeGVjdXRlQ2hhcnRDb21tYW5kQXJncyh0aGlzLCBDaGFydENvbW1hbmRUeXBlLnNldEN1cnNvck9uUG9pbnRlclBvc2l0aW9uLCBjaGFydCwge2N1cnNvckluZGV4OiBjaGFydE9iamVjdFVuZGVyTW91c2UuYXJncy5jdXJzb3JJbmRleCwgbW91c2VQb2ludDogbW91c2VQb2ludH0pKVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmKGNoYXJ0T2JqZWN0VW5kZXJNb3VzZS5jaGFydE9iamVjdFR5cGUgPT0gQ2hhcnRPYmplY3RUeXBlLmNoYXJ0U3BhY2Upe1xyXG4gICAgICAgICAgICB0aGlzLnVzZXJJbnRlcmFjdGlvbkNvbnRyb2xsZXIuZXhlY3V0ZUNvbW1hbmQobmV3IEV2ZW50RXhlY3V0ZUNoYXJ0Q29tbWFuZEFyZ3ModGhpcywgQ2hhcnRDb21tYW5kVHlwZS5zZXRDdXJzb3JPblBvaW50ZXJQb3NpdGlvbiwgY2hhcnQsIHtjdXJzb3JJbmRleDogdGhpcy5pbmRleCwgbW91c2VQb2ludDogbW91c2VQb2ludH0pKVxyXG4gICAgICAgIH1cclxuICAgICAgICBjaGFydE9iamVjdFVuZGVyTW91c2UuY2hhcnRPYmplY3RUeXBlID0gQ2hhcnRPYmplY3RUeXBlLmN1cnNvcjtcclxuICAgICAgICByZXR1cm4gY2hhcnRPYmplY3RVbmRlck1vdXNlO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBvbkRyYWcoY2hhcnQ6IElUcmFjZUNoYXJ0KSB7XHJcbiAgICB9XHJcblxyXG4gICAgb25EcmFnRW5kKGNoYXJ0OiBJVHJhY2VDaGFydCl7XHJcbiAgICB9XHJcblxyXG4gICAgb25Nb3VzZURvd24oY2hhcnQ6IElUcmFjZUNoYXJ0LCBjaGFydE9iamVjdFVuZGVyTW91c2UgOiBDaGFydE9iamVjdEluZm9ybWF0aW9uLCBtb3VzZVBvaW50OiBJUG9pbnQpIDogQ2hhcnRPYmplY3RJbmZvcm1hdGlvbntcclxuICAgICAgICBpZihjaGFydE9iamVjdFVuZGVyTW91c2UuY2hhcnRPYmplY3RUeXBlID09IENoYXJ0T2JqZWN0VHlwZS5jdXJzb3Ipe1xyXG4gICAgICAgICAgICB0aGlzLnVzZXJJbnRlcmFjdGlvbkNvbnRyb2xsZXIuZXhlY3V0ZUNvbW1hbmQobmV3IEV2ZW50RXhlY3V0ZUNoYXJ0Q29tbWFuZEFyZ3ModGhpcywgQ2hhcnRDb21tYW5kVHlwZS5zZXRDdXJzb3JPblBvaW50ZXJQb3NpdGlvbiwgY2hhcnQsIHtjdXJzb3JJbmRleDogY2hhcnRPYmplY3RVbmRlck1vdXNlLmFyZ3MuY3Vyc29ySW5kZXgsIG1vdXNlUG9pbnQ6IG1vdXNlUG9pbnR9KSlcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZihjaGFydE9iamVjdFVuZGVyTW91c2UuY2hhcnRPYmplY3RUeXBlID09IENoYXJ0T2JqZWN0VHlwZS5jaGFydFNwYWNlKXtcclxuICAgICAgICAgICAgdGhpcy51c2VySW50ZXJhY3Rpb25Db250cm9sbGVyLmV4ZWN1dGVDb21tYW5kKG5ldyBFdmVudEV4ZWN1dGVDaGFydENvbW1hbmRBcmdzKHRoaXMsIENoYXJ0Q29tbWFuZFR5cGUuc2V0Q3Vyc29yT25Qb2ludGVyUG9zaXRpb24sIGNoYXJ0LCB7Y3Vyc29ySW5kZXg6IHRoaXMuaW5kZXgsIG1vdXNlUG9pbnQ6IG1vdXNlUG9pbnR9KSlcclxuICAgICAgICAgICAgY2hhcnRPYmplY3RVbmRlck1vdXNlLmFyZ3MuY3Vyc29ySW5kZXggPSB0aGlzLmluZGV4O1xyXG5cclxuICAgICAgICAgICAgY2hhcnRPYmplY3RVbmRlck1vdXNlLmNoYXJ0T2JqZWN0VHlwZSA9IENoYXJ0T2JqZWN0VHlwZS5jdXJzb3I7XHJcblxyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICByZXR1cm4gY2hhcnRPYmplY3RVbmRlck1vdXNlO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQge0N1cnNvckludGVyYWN0aW9uU3RyYXRlZ3l9Il19